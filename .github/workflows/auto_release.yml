name: Auto dry run
on:
  workflow_dispatch:
    inputs:
      releaseversion:
        description: 'Release version'
        required: false
        default: '2.4.0'
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Will release to central maven"

      - uses: actions/checkout@v2

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v1
        with:
          java-version: 8
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

#      - name: Set projects Maven version to GitHub Action GUI set version
#        run: mvn versions:set "-DnewVersion=${{ github.event.inputs.releaseversion }}"

#      - name: Publish package
#        run: mvn --batch-mode release:prepare release:perform -P release -DskipTests=true
#        env:
#          MAVEN_USERNAME: ${{ secrets.OSS_SONATYPE_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.OSS_SONATYPE_PASSWORD }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - uses: auto-it/setup-auto@v1

      - name: Auto Release
        run: auto release -d

      - name: GitHub Tag Name example
        run: |
          echo "Tag name from GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "Tag name from github.ref_name: ${{  github.ref_name }}"

#      - name: Create GitHub Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: ${{ github.event.inputs.releaseversion }}
#          release_name: ${{ github.event.inputs.releaseversion }}
#          body: |
#            ```
#            <dependencies>
#              <dependency>
#                  <groupId>de.codecentric</groupId>
#                  <artifactId>cxf-spring-boot-starter</artifactId>
#                  <version>${{ github.event.inputs.releaseversion }}</version>
#              </dependency>
#            </dependencies>
#            ```
#          draft: false
#          prerelease: false